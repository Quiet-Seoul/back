name: Deploy to EC2 using Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Cache Docker layers
      #   uses: actions/cache@v2
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-buildx-

      - name: Build Docker image to ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          # Authenticate to AWS ECR
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY

          # Build Docker image
          docker build -t $ECR_REPOSITORY:latest .

          # Tag the image
          docker tag $ECR_REPOSITORY:latest $ECR_REPOSITORY:latest

          # Push Docker image to ECR
          docker push $ECR_REPOSITORY:latest

      # - name: Deploy to EC2
      #   run: |
      #     # SSH into the EC2 instance and pull the latest Docker image
      #     ssh -o StrictHostKeyChecking=no ubuntu@$EC2_IP_ADDRESS <<EOF
      #       docker pull $ECR_REPOSITORY:latest
      #       docker stop $(docker ps -q) || true
      #       docker run -d -p 8080:8080 --name quietseoul $ECR_REPOSITORY:latest
      #     EOF
